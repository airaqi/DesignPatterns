!_TAG_FILE_SORTED	2	/0=unsorted, 1=sorted, 2=foldcase/
append	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_composite.cpp	/^void GlyphComposite::append(Glyph* glyph)$/;"	f	language:C++	class:GlyphComposite	typeref:typename:void
append	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_leaf.cpp	/^void GlyphLeaf::append(Glyph* glyph)            { throw std::runtime_error(ERR_LEAF_CHILDREN); }$/;"	f	language:C++	class:GlyphLeaf	typeref:typename:void
bounds	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_composite.cpp	/^void GlyphComposite::bounds(Rect& rect)$/;"	f	language:C++	class:GlyphComposite	typeref:typename:void
bounds	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_leaf.cpp	/^void GlyphLeaf::bounds(Rect& bound) $/;"	f	language:C++	class:GlyphLeaf	typeref:typename:void
child	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_composite.cpp	/^Glyph* GlyphComposite::child(int index)$/;"	f	language:C++	class:GlyphComposite	typeref:typename:Glyph *
child	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_leaf.cpp	/^Glyph* GlyphLeaf::child(int index)              { throw std::runtime_error(ERR_LEAF_CHILDREN); }$/;"	f	language:C++	class:GlyphLeaf	typeref:typename:Glyph *
count	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_composite.cpp	/^long GlyphComposite::count() const$/;"	f	language:C++	class:GlyphComposite	typeref:typename:long
count	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_leaf.cpp	/^long GlyphLeaf::count() const                   { throw std::runtime_error(ERR_LEAF_CHILDREN); }$/;"	f	language:C++	class:GlyphLeaf	typeref:typename:long
draw	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_character.cpp	/^void GlyphCharacter::draw(Window* w) $/;"	f	language:C++	class:GlyphCharacter	typeref:typename:void
draw	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_composite.cpp	/^void GlyphComposite::draw(Window* w)$/;"	f	language:C++	class:GlyphComposite	typeref:typename:void
draw	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_decorator.cpp	/^void GlyphDecorator::draw(Window *window)$/;"	f	language:C++	class:GlyphDecorator	typeref:typename:void
draw	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_rectangle.cpp	/^void GlyphRectangle::draw(Window* w)$/;"	f	language:C++	class:GlyphRectangle	typeref:typename:void
equals	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_composite.cpp	/^bool GlyphComposite::equals(Glyph* other)$/;"	f	language:C++	class:GlyphComposite	typeref:typename:bool
equals	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_leaf.cpp	/^bool GlyphLeaf::equals(Glyph* other) { return false; }$/;"	f	language:C++	class:GlyphLeaf	typeref:typename:bool
Glyph	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph.cpp	/^Glyph::Glyph(Glyph* parent) : _parent(parent) {}$/;"	f	language:C++	class:Glyph
GlyphCharacter	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_character.cpp	/^GlyphCharacter::GlyphCharacter(char ch, Coord x, Coord y, Coord w, Coord h, Glyph* parent) : Gly/;"	f	language:C++	class:GlyphCharacter
GlyphColumn	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_column.cpp	/^GlyphColumn::GlyphColumn(Glyph* parent) : GlyphComposite(parent) {}$/;"	f	language:C++	class:GlyphColumn
GlyphComposite	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_composite.cpp	/^GlyphComposite::GlyphComposite(Glyph* parent)$/;"	f	language:C++	class:GlyphComposite
GlyphDecorator	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_decorator.cpp	/^GlyphDecorator::GlyphDecorator(Glyph* component) : _component(component) {}$/;"	f	language:C++	class:GlyphDecorator
GlyphLeaf	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_leaf.cpp	/^GlyphLeaf::GlyphLeaf(Glyph* parent) : Glyph(parent) {}$/;"	f	language:C++	class:GlyphLeaf
GlyphRectangle	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_rectangle.cpp	/^GlyphRectangle::GlyphRectangle(Coord x, Coord y, Coord w, Coord h, Glyph* parent) : GlyphRectang/;"	f	language:C++	class:GlyphRectangle
GlyphRectangle	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_rectangle.cpp	/^GlyphRectangle::GlyphRectangle(Rect rec, Glyph* parent) : GlyphLeaf(parent) $/;"	f	language:C++	class:GlyphRectangle
GlyphRow	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_row.cpp	/^GlyphRow::GlyphRow(Glyph* parent) : GlyphComposite(parent) {}$/;"	f	language:C++	class:GlyphRow
insert	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_composite.cpp	/^void GlyphComposite::insert(Glyph* glyph, int index)$/;"	f	language:C++	class:GlyphComposite	typeref:typename:void
insert	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_leaf.cpp	/^void GlyphLeaf::insert(Glyph* glyph, int index) { throw std::runtime_error(ERR_LEAF_CHILDREN); }$/;"	f	language:C++	class:GlyphLeaf	typeref:typename:void
intersects	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_composite.cpp	/^bool GlyphComposite::intersects(const Point& p)$/;"	f	language:C++	class:GlyphComposite	typeref:typename:bool
intersects	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_leaf.cpp	/^bool GlyphLeaf::intersects(const Point& p)$/;"	f	language:C++	class:GlyphLeaf	typeref:typename:bool
isComposite	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_composite.cpp	/^bool GlyphComposite::isComposite() { return true; }$/;"	f	language:C++	class:GlyphComposite	typeref:typename:bool
isComposite	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_leaf.cpp	/^bool GlyphLeaf::isComposite() { return false; }$/;"	f	language:C++	class:GlyphLeaf	typeref:typename:bool
isLeaf	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_composite.cpp	/^bool GlyphComposite::isLeaf() { return false; }$/;"	f	language:C++	class:GlyphComposite	typeref:typename:bool
isLeaf	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_leaf.cpp	/^bool GlyphLeaf::isLeaf() { return true; }$/;"	f	language:C++	class:GlyphLeaf	typeref:typename:bool
iterator	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_composite.cpp	/^Iterator<Glyph*>* GlyphComposite::iterator()$/;"	f	language:C++	class:GlyphComposite	typeref:typename:Iterator<Glyph * > *
iterator	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_leaf.cpp	/^Iterator<Glyph*>* GlyphLeaf::iterator() { return new NullIterator<Glyph*>(); }$/;"	f	language:C++	class:GlyphLeaf	typeref:typename:Iterator<Glyph * > *
lexi	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/CMakeLists.txt	/^add_library(lexi glyph.cpp glyph_composite.cpp glyph_leaf.cpp glyph_row.cpp glyph_column.cpp gly/;"	t	language:CMake
operator !=	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph.cpp	/^bool operator!=(Glyph& lhs, Glyph& rhs)$/;"	f	language:C++	typeref:typename:bool
operator !=	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_character.cpp	/^bool operator!=(GlyphCharacter& lhs, GlyphCharacter& rhs)$/;"	f	language:C++	typeref:typename:bool
operator !=	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_rectangle.cpp	/^bool operator!=(GlyphRectangle& lhs, GlyphRectangle& rhs)$/;"	f	language:C++	typeref:typename:bool
operator ==	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph.cpp	/^bool operator==(Glyph& lhs, Glyph& rhs)$/;"	f	language:C++	typeref:typename:bool
operator ==	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_character.cpp	/^bool operator==(GlyphCharacter& lhs, GlyphCharacter& rhs)$/;"	f	language:C++	typeref:typename:bool
operator ==	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_rectangle.cpp	/^bool operator==(GlyphRectangle& lhs, GlyphRectangle& rhs)$/;"	f	language:C++	typeref:typename:bool
parent	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph.cpp	/^Glyph* Glyph::parent() { return _parent; }$/;"	f	language:C++	class:Glyph	typeref:typename:Glyph *
parent	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph.cpp	/^void Glyph::parent(Glyph* parent) { _parent = parent; }$/;"	f	language:C++	class:Glyph	typeref:typename:void
rect	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_composite.cpp	/^Rect GlyphComposite::rect()$/;"	f	language:C++	class:GlyphComposite	typeref:typename:Rect
rect	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_composite.cpp	/^void GlyphComposite::rect(Rect rect)$/;"	f	language:C++	class:GlyphComposite	typeref:typename:void
rect	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_leaf.cpp	/^Rect GlyphLeaf::rect() { return _rect; }$/;"	f	language:C++	class:GlyphLeaf	typeref:typename:Rect
rect	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_leaf.cpp	/^void GlyphLeaf::rect(Rect rect) { _rect = rect; }$/;"	f	language:C++	class:GlyphLeaf	typeref:typename:void
remove	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_composite.cpp	/^void GlyphComposite::remove(Glyph* glyph)$/;"	f	language:C++	class:GlyphComposite	typeref:typename:void
remove	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_leaf.cpp	/^void GlyphLeaf::remove(Glyph*)                  { throw std::runtime_error(ERR_LEAF_CHILDREN); }$/;"	f	language:C++	class:GlyphLeaf	typeref:typename:void
~GlyphComposite	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_composite.cpp	/^GlyphComposite::~GlyphComposite() { delete _children; }$/;"	f	language:C++	class:GlyphComposite
~GlyphDecorator	/home/airaqi/Documents/learn/courses/ossu/011-Design_Patterns/workspace/projects/lexi/src/glyph_decorator.cpp	/^GlyphDecorator::~GlyphDecorator() {$/;"	f	language:C++	class:GlyphDecorator
